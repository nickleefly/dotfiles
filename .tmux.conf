# Remap prefix to Control + s
# set -g prefix ยง
set -g prefix C-s
unbind C-b
bind C-s send-prefix

# Set focus-events on (important for Neovim autoread)
set -g focus-events on

# Force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Relax!
set -sg escape-time 0
set -sg repeat-time 600

# Mouse
set -g mouse on

# Less stretching to get to the first item.
set -g base-index 1
setw -g pane-base-index 1

# Quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Use Vi mode
setw -g mode-keys vi
set -g status-keys vi

# Vi-style copy paste
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

set-option -g default-command "reattach-to-user-namespace -l bash"
# More straight forward key bindings for splitting
unbind %
bind | split-window -h
bind h split-window -h
unbind '"'
bind - split-window -v
bind v split-window -v

# Smart pane switching with awareness of vim splits
bind -n C-h if "[ $(tmux display -p '#{pane_current_command}') = vim  ]" "send-keys C-h" "select-pane -L"
bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') = vim  ]" "send-keys C-j" "select-pane -D"
bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') = vim  ]" "send-keys C-k" "select-pane -U"
bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') = vim  ]" "send-keys C-l" "select-pane -R"
bind -n "C-\\" if "[ $(tmux display -p '#{pane_current_command}') = vim  ]" "send-keys C-\\" "select-pane -l"
# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'
# Terminal junks!
set -g default-terminal "screen-256color"
# Bad Wolf
set -g status-fg white
set -g status-bg black
set -g window-status-activity-style bold
set -g pane-border-style fg=green
set -g pane-active-border-style fg=white
set -g message-style fg=white
set -g message-style fg=black
set -g message-style bold
# Custom status bar
# Powerline symbols
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour238,nobold]#[fg=colour15,bg=colour238,bold] #I.#P #[fg=colour238,bg=colour234,nobold]'
set -g status-right '#[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour16,bg=colour39,noreverse,bold] #I #W #[fg=colour39,bg=colour234,nobold]"

# Activity
setw -g monitor-activity on
set -g visual-activity on

# Autorename sanely.
setw -g automatic-rename on

# Better name management
bind c new-window
bind , command-prompt "rename-window '%%'"

set-option -ga terminal-overrides ',*:enacs@:smacs@:rmacs@:acsc@'

# Restoring Clear Screen (C-l)
bind C-l send-keys 'C-l'
# Search tmux session
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

set-option -g history-limit 99999

# tpm plugin
set -g @plugin 'tmux-plugins/tpm'

# list of tmux plugins
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes

set -g @plugin 'dracula/tmux'
set -g @dracula-show-powerline true
set -g @dracula-fixed-location "Shanghai"
set -g @dracula-plugins "weather"
set -g @dracula-show-fahrenheit false
set -g @dracula-show-flags true
set -g @dracula-show-left-icon session
set -g status-position top

unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouse


set -g @themepack 'powerline/default/cyan'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
